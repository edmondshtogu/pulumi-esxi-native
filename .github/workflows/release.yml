name: release
on:
  push:
    tags:
      - v*.*.*

permissions:
  contents: write
  id-token: write

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  NUGET_FEED_URL: https://api.nuget.org/v3/index.json
  PULUMI_GO_DEP_ROOT: ${{ github.workspace }}/..
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  PYPI_USERNAME: "__token__"
  PUBLISH_PYPI: true
  PUBLISH_NPM: true
  PUBLISH_NUGET: true

jobs:
  publish_binary:
    name: publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.goversion }}
          cache-dependency-path: provider/go.sum

      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        with:
          repo: pulumi/pulumictl

      - name: Build Provider
        run: make gen provider

      - name: Set PreRelease Version
        run: echo "GORELEASER_CURRENT_TAG=v$(pulumictl get version --language generic)" >> $GITHUB_ENV

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          args: -p 3 release --rm-dist
          version: latest

    strategy:
      fail-fast: true
      matrix:
        goversion:
          - 1.20.x

  publish_sdk:
    name: Publish SDKs
    runs-on: ubuntu-latest
    needs: publish_binary
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.goversion }}
          cache-dependency-path: provider/go.sum

      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        with:
          repo: pulumi/pulumictl

      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@v2.0.0

      - name: Setup Node
        if: ${{ matrix.language == 'nodejs' }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.nodeversion }}
          registry-url: ${{ env.NPM_REGISTRY_URL }}

      - name: Setup DotNet
        if: ${{ matrix.language == 'dotnet' }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnetverson }}

      - name: Setup Python
        if: ${{ matrix.language == 'python' }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.pythonversion }}

      - name: Generate SDK
        run: make gen ${{ matrix.language }}_sdk

      - name: Check worktree clean
        run: |
          git update-index -q --refresh
          if ! git diff-files --quiet; then
              >&2 echo "error: working tree is not clean, aborting!"
              git status
              git diff
              exit 1
          fi

      - name: Publish package to PyPI
        if: ${{ matrix.language == 'python' && env.PUBLISH_PYPI == 'true' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: ${{ env.PYPI_USERNAME }}
          password: ${{ env.PYPI_PASSWORD }}
          packages_dir: ${{github.workspace}}/sdk/python/bin/dist

      - name: Publish package to NPM
        if: ${{ matrix.language == 'nodejs' && env.PUBLISH_NPM == 'true' }}
        uses: JS-DevTools/npm-publish@v3
        with:
          access: "public"
          token: ${{ env.NPM_TOKEN }}
          package: ${{github.workspace}}/sdk/nodejs/bin/package.json
          provenance: true

      - name: Publish package to Nuget
        if: ${{ matrix.language == 'dotnet' && env.PUBLISH_NUGET == 'true' }}
        run: |
          dotnet nuget push ${{github.workspace}}/sdk/dotnet/bin/Debug/*.nupkg -s ${{ env.NUGET_FEED_URL }} -k ${{ env.NUGET_PUBLISH_KEY }}
          echo "done publishing packages"

    strategy:
      fail-fast: true
      matrix:
        language:
          - nodejs
          - python
          - dotnet
          - go
        dotnetversion:
          - 3.1.301
        goversion:
          - 1.20.x
        nodeversion:
          - 18.x
        pythonversion:
          - "3.9"
